import{w as u,an as l,bS as m,b1 as S,bT as M,bU as x,aC as z,aW as R,aS as f}from"./main-1f7973ff.js";const P=u("/dictionary"),b=""+new URL("fullscreen-white-a2cdc832.svg",import.meta.url).href,U=""+new URL("unmaximize-white-c3c137ea.svg",import.meta.url).href;let c="maximize";const w={maximize:{onClick(){o("maximizeMainWindow")},icon:b},unmaximize:{onClick(){o("unmaximizeMainWindow")},icon:U}},D=i=>{c=i,I.set(w[c])},I=u(w[c]),_=(i,n,e,t)=>{n?(l.onSuccessfulPractice(e),m("successful",t)):(l.onUnsuccessfulPractice(e),m("unsuccessful",t))},g=()=>{var i,n,e,t,r,s,d;(i=window.electron)==null||i.ipcRenderer.on("newPassivePracticeComplete",_),(n=window.electron)==null||n.ipcRenderer.on("setMaximizeStateStoreValue",(a,p)=>D(p)),(e=window.electron)==null||e.ipcRenderer.on("openPracticePage",()=>P.set("/practice")),(t=window.electron)==null||t.ipcRenderer.on("idle mode countdown start",S),(r=window.electron)==null||r.ipcRenderer.on("idle mode initial data",M),(s=window.electron)==null||s.ipcRenderer.on("update idle mode",x),(d=window.electron)==null||d.ipcRenderer.on("importDBDataFinished",()=>{const a=z(f);o("updateIdleModeStateMainWin",a.isEnabled),o("updateIdleModeTimerDataMainWin",a.timerValue),R()})},o=(i,...n)=>{var e;(e=window.electron)==null||e.ipcRenderer.send(i,...n)},C=Object.freeze(Object.defineProperty({__proto__:null,initDesktopActionListeners:g,sendToIpcMain:o},Symbol.toStringTag,{value:"Module"}));export{C as i,I as m,P as r,o as s};
